---
- name: install docker via apt
  hosts: all
  become: true
  vars:
    USERNAME: cloudgenius

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop:
        [
          "apt-transport-https",
          "ca-certificates",
          "curl",
          "gnupg",
          "software-properties-common",
          "python3-pip",
          "virtualenv",
          "python3-setuptools",
        ]

# sudo install -m 0755 -d /etc/apt/keyrings

    - name: Create a /etc/apt/keyrings directory if it does not exist
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present

# sudo chmod a+r /etc/apt/keyrings/docker.gpg
    - name: Change permission on/etc/apt/keyrings/docker.gpg
      file:
        path: /etc/apt/keyrings/docker.gpg
        state: file
        owner: root
        group: root
        mode: a+r

# echo \
#   "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#   "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
#   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Add Docker Repository
      apt_repository:
        repo: deb [ arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable
        # repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable
        state: present

# # sudo apt-get update
#     - name: Install aptitude using apt
#       apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

# sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Update apt and install docker-ce
      apt: name={{ item }} state=latest update_cache=yes
      loop:
        ["docker-ce", "docker-ce-cli", "containerd.io", "docker-buildx-plugin", "docker-compose-plugin"]

    - name: Install Docker Module for Python
      pip:
        name: docker

# Linux post-installation steps for Docker Engine

    - name: adding existing user '{{ USERNAME }}' to group docker
      user:
        name: "{{ USERNAME }}"
        groups: docker
        append: yes

    - name: Enable and start docker
      ansible.builtin.systemd:
        name: docker.service
        state: started
        enabled: yes